# Docker Compose configuration for Ticket Management Portal

version: '3.8'

services:
  # Frontend application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_MODE: production
    container_name: ticket-portal-app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ticket-portal-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ticket-portal.rule=Host(`localhost`)"
      - "traefik.http.services.ticket-portal.loadbalancer.server.port=8080"

  # Nginx reverse proxy (optional, for load balancing)
  nginx:
    image: nginx:alpine
    container_name: ticket-portal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - ticket-portal-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: ticket-portal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ticket-portal-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: ticket-portal-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - ticket-portal-network

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: ticket-portal-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - ticket-portal-network
    depends_on:
      - prometheus

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ticket-portal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16